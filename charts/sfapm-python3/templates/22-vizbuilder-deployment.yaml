apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sfapm.fullname" . }}-vizbuilder
  labels:
    {{- include "sfapm.labels" . | nindent 4 }}
    app: sfapm
    role: vizbuilder
    snappyflow/component: snappyflow-apm
    {{ default "snappyflow/appname" .Values.global.sfappname_key }}: {{ default .Release.Name .Values.global.sfappname }}
    {{ default "snappyflow/projectname" .Values.global.sfprojectname_key }}: {{ default .Release.Name .Values.global.sfprojectname }}
spec:
{{- if not .Values.vizbuilder.autoscaling.enabled }}
  replicas: {{ .Values.vizbuilder.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "sfapm.selectorLabels" . | nindent 6 }}
      app: sfapm
      role: vizbuilder
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "sfapm.selectorLabels" . | nindent 8 }}
        app: sfapm
        role: vizbuilder
        snappyflow/component: snappyflow-apm
        {{ default "snappyflow/appname" .Values.global.sfappname_key }}: {{ default .Release.Name .Values.global.sfappname }}
        {{ default "snappyflow/projectname" .Values.global.sfprojectname_key }}: {{ default .Release.Name .Values.global.sfprojectname }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sfapm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: db-ready
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          command:
            - sh 
            - -c 
            - "until pg_isready -d postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}; do sleep 3; done"
          {{- if .Values.postgresql.enabled }}
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: multidbUserPassord
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "sfapm.fullname" . }}-vizbuilder
        - name: redis-ready
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          command:
            - sh 
            - -c 
            - "until redis-cli -h ${REDIS_HOST} -p ${REDIS_PORT} ping ; do sleep 3; done"
          envFrom:
            - configMapRef:
                name: {{ include "sfapm.fullname" . }}-vizbuilder
        - name: migration
          image: "{{ .Values.vizbuilder.image.repository }}:{{ .Values.vizbuilder.image.tag }}"
          imagePullPolicy: {{ .Values.vizbuilder.image.pullPolicy }}
          command: ["bash"]
          # args: ["-c", "python manage.py makemigrations && python manage.py migrate"]
          args: ["-c", "python manage.py migrate django_celery_beat && python manage.py migrate django_celery_results && python manage.py migrate"]
          env:
          {{- if .Values.postgresql.enabled }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: multidbUserPassord
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "sfapm.fullname" . }}-vizbuilder
          volumeMounts:
            - mountPath: /data/snappyflow
              name: data 
      containers:
        - name: vizbuilder
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.vizbuilder.image.repository }}:{{ .Values.vizbuilder.image.tag }}"
          imagePullPolicy: {{ .Values.vizbuilder.image.pullPolicy }}
          env:
          {{- if .Values.global.enable_sftrace }}
            - name: SFTRACE_PROFILE_KEY
              value: "{{ .Values.global.key }}"
            - name: SFTRACE_PROJECT_NAME
              value: "{{ .Values.global.sfprojectname }}"
            - name: SFTRACE_APP_NAME
              value: "{{ .Values.global.sfappname }}"
            - name: ENABLE_SFTRACE
              value: "{{ .Values.global.enable_sftrace }}"
            - name: ELASTIC_APM_SERVICE_NAME
              value: "vizbuilder"
          {{- end }}
          {{- if .Values.postgresql.enabled }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: multidbUserPassord
          {{- end }}
          {{- if .Values.enableDebug }}
            - name: DEBUG
              value: "True"
          {{- end }}
          {{- if .Values.enableDebug }}
            - name: LOG_LEVEL
              value: debug
          {{- else }}
            - name: LOG_LEVEL
              value: info
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "sfapm.fullname" . }}-vizbuilder                                  
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
            httpGet:
              path: /vizbuilder/status
              port: http
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
            httpGet:
              path: /vizbuilder/status
              port: http
          resources:
            {{- toYaml .Values.vizbuilder.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data/snappyflow
              name: data
            - name: vizbuilderlog
              mountPath: /var/log/snappyflow/vizbuilder
            {{- if .Values.global.enable_sftrace }}
            - mountPath: /sfagent
              name: python-agent
            {{- end }}
        {{- if .Values.sidecarLogger.enabled }}
        - name: application-logger
          image:  "{{ .Values.sidecarLogger.image.repository }}:{{ .Values.sidecarLogger.image.tag }}"
          imagePullPolicy: {{ .Values.sidecarLogger.image.pullPolicy | quote }}
          args: [/bin/sh, -c, 'tail -n+1 -F -q /var/log/snappyflow/vizbuilder/alert.log  /var/log/snappyflow/vizbuilder/log_operations.log  /var/log/snappyflow/vizbuilder/query_builder.log  /var/log/snappyflow/vizbuilder/vizbuilder.log /var/log/snappyflow/vizbuilder/signatures.log']
          resources:
            {{- toYaml .Values.sidecarLogger.resources | nindent 12 }}
          volumeMounts:
          - name: vizbuilderlog
            mountPath: /var/log/snappyflow/vizbuilder
        - name: audit-logger
          image:  "{{ .Values.sidecarLogger.image.repository }}:{{ .Values.sidecarLogger.image.tag }}"
          imagePullPolicy: {{ .Values.sidecarLogger.image.pullPolicy | quote }}
          args: [/bin/sh, -c, 'tail -n+1 -F /var/log/snappyflow/vizbuilder/audit.log']
          resources:
            {{- toYaml .Values.sidecarLogger.resources | nindent 12 }}
          volumeMounts:
          - name: vizbuilderlog
            mountPath: /var/log/snappyflow/vizbuilder
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          emptyDir: {}
        - name: vizbuilderlog
          emptyDir: {}
        {{- if .Values.global.enable_sftrace }}
        - name: python-agent
          emptyDir: {}
        {{- end }}


